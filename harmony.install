<?php

/**
 * A product of the instructions! https://www.drupal.org/node/1022020
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for Harmony.
 */
function harmony_install() {
  // Kick off with a basic install.
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  minimal_install();

  // Allow user pictures.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Setup letter_default_avatar so users have something instead of nothing.
  variable_set('letter_default_avatar_set_picture_fid', TRUE);
  variable_set('letter_default_avatar_add_high_res_class', TRUE);

  // Allow open registration.
  variable_set('user_register', USER_REGISTER_VISITORS);

  // But tell Honeypot to protect all forms (but keep caching going).
  variable_set('honeypot_protect_all_forms', 1);
  variable_set('honeypot_element_name', 'email_confirm');
  variable_set('honeypot_time_limit', 0);

  // Create various roles.
  $roles = array(
    'member',
    'moderator',
    'forum admin',
    'administrator',
  );
  foreach ($roles as $index => $role_name) {
    $role = new stdClass();
    $role->name = $role_name;
    $role->weight = $index + 2;
    user_role_save($role);

    // Assign the administrator role to user 1, amongst doing other things.
    if ($role_name === 'administrator') {
      user_role_grant_permissions($role->rid, array_keys(module_invoke_all('permission')));
      // Set this as the administrator role.
      variable_set('user_admin_role', $role->rid);
      // Assign user 1 the "administrator" role.
      db_insert('users_roles')->fields(array('uid' => 1, 'rid' => $role->rid))->execute();
    }
  }

  // Enable and set the admin theme.
  db_update('system')->fields(array('status' => 1))->condition('type', 'theme')->condition('name', 'seven')->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');

  // Enable and set the frontend theme.
  db_update('system')->fields(array('status' => 1))->condition('type', 'theme')->condition('name', 'bootstrap')->execute();
  variable_set('theme_default', 'bootstrap');

  // Set the homepage.
  variable_set('site_frontpage', 'forum');

  // Update the one time login URL to include simple_pass_reset.
  // The change is "[user:one-time-login-url]/brief".
  $password_reset_email_body = "[user:name],

A request to reset the password for your account has been made at [site:name].

You may now log in by clicking this link or copying and pasting it to your browser:

[user:one-time-login-url]/brief

This link can only be used once to log in and will lead you to a page where you can set your password. It expires after one day and nothing will happen if it's not used.

--  [site:name] team";
  variable_set('user_mail_password_reset_body', $password_reset_email_body);
}
